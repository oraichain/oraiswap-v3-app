# This is a basic workflow to help you get started with Actions

name: Staging

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [dev]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.18.0]

        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.10.0
              with:
                  access_token: ${{ github.token }}
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                      ./node_modules/
                  key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install Yarn
              run: npm install -g yarn
            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn --ignore-platform --ignore-engines --silent
            #   run: yarn --ignore-platform --ignore-engines --silent
            - name: Copy env
              run: cp .env.example .env
            - name: Build
              run: yarn build
              env:
                  CI: false
            # - name: Sentry sourcemap
            #   run: echo "$ENV_SENTRY_PROD" > sentry.env && source sentry.env && yarn sentry:sourcemap
            #   shell: bash
            #   env:
            #       ENV_SENTRY_PROD: ${{secrets.ENV_SENTRY_PROD}}
            - name: Set firebase project alias
              run: yarn firebase deploy --only hosting:oraidex-amm-v3-staging --token ${{ secrets.FIREBASE_TOKEN_PHUTX }} -m "${{ github.event.head_commit.message }}"
            - name: Send discord message
              uses: appleboy/discord-action@master
              with:
                  webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
                  webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
                  username: "GitBot"
                  message: ':loudspeaker: [staging] Repo ``oraiswap-v3-app`` has just published by ${{ github.event.head_commit.author.name }}'